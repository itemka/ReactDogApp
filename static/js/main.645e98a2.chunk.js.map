{"version":3,"sources":["components/Circle/Circle.module.css","components/Files/dog.mp3","components/Files/error.mp3","components/Redux/ReducerGame.js","components/Circle/Circle.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","plusClickAction","type","initialState","dogArray","id","checkClick","counterClick","level","ReducerGame","state","action","map","item","randomNumber","AudioOnClickDog","Audio","dogAudio","AudioOnClickDogError","dogAudioError","Circle","props","check","this","currentTime","play","photoShow","css","show","hide","className","itemGreen","onClick","React","Component","connect","App","getRandomImageIndex","Math","floor","random","start","backCount","finish","wait","gameStart","setState","setTimeoutStart","then","mySetTimout","gameEnd","levelDown","setTimeout","console","log","gameStop","secondsStart","Promise","resolve","secondsOfIntervale","secondsOfWait","levelPlus","interval","setInterval","randomShow","clearInterval","render","circles","key","itemApp","itemAppGreen","click","newDog","ConnectedApp","Boolean","window","location","hostname","match","CombineReducer","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.645e98a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Circle_item__E-pue\",\"itemGreen\":\"Circle_itemGreen__2Xwhz\",\"hide\":\"Circle_hide__13Cmw\",\"show\":\"Circle_show__3HZHR\",\"itemApp\":\"Circle_itemApp__2BzC-\",\"itemAppGreen\":\"Circle_itemAppGreen__2m9Oy\",\"newDog\":\"Circle_newDog__3Vj9H\",\"click\":\"Circle_click__3z7T7\"};","module.exports = __webpack_public_path__ + \"static/media/dog.75fa68d4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/error.f71584f3.mp3\";","const PLUS_CLICK = 'PLUS_CLICK';\nconst RANDOM_SHOW = 'RANDOM_SHOW';\nconst FINISH = 'FINISH';\nconst LEVEL_PLUS = 'LEVEL_PLUS';\nconst LEVEL_DOWN = 'LEVEL_DOWN';\n\nexport const plusClickAction = () => ({type: PLUS_CLICK});\nexport const randomShow = randomNumber => ({type: RANDOM_SHOW, randomNumber: randomNumber});\nexport const finish = ()=>({type: FINISH});\nexport const levelPlus = ()=>({type: LEVEL_PLUS});\nexport const levelDown = ()=>({type: LEVEL_DOWN});\n\nconst initialState = {\n    dogArray: [\n        {id: 1, checkClick: false},\n        {id: 2, checkClick: false},\n        {id: 3, checkClick: false},\n        {id: 4, checkClick: false},\n        {id: 5, checkClick: false},\n        {id: 6, checkClick: false},\n        {id: 7, checkClick: false},\n        {id: 8, checkClick: false},\n        {id: 9, checkClick: false}\n    ],\n    counterClick: 0,\n    level: 0,\n};\n\nconst ReducerGame = (state = initialState, action) => {\n    switch (action.type) {\n        case PLUS_CLICK:\n            return {\n                ...state,\n                counterClick: state.counterClick + 1,\n            };\n        case RANDOM_SHOW:\n            return {\n                ...state,\n                dogArray: state.dogArray.map(item => {\n                    if (item.id === action.randomNumber) return {...item, checkClick: true};\n                    else return {...item, checkClick: false};\n                })\n            };\n        case FINISH:\n            return {\n                ...state,\n                counterClick: state.counterClick = 0,\n            };\n        case LEVEL_PLUS:\n            return {\n                ...state,\n                level: state.level + 1,\n            };\n        case LEVEL_DOWN:\n            return {\n                ...state,\n                level: state.level = 0,\n            };\n        default:\n            return {...state}\n    }\n    return state;\n};\n\nexport default ReducerGame;","import React from 'react';\nimport css from './Circle.module.css';\nimport {connect} from \"react-redux\";\nimport {plusClickAction} from \"../Redux/ReducerGame\";\nimport dogAudio from './../Files/dog.mp3';\nimport dogAudioError from './../Files/error.mp3';\n\nconst AudioOnClickDog = new Audio(dogAudio);\nconst AudioOnClickDogError = new Audio(dogAudioError);\n\nclass Circle extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onClick(check) {\n        if (check) {\n            this.props.plusClickAction();\n            AudioOnClickDog.currentTime = 0;\n            AudioOnClickDog.play();\n        } else {\n            AudioOnClickDogError.currentTime = 0;\n            AudioOnClickDogError.play();\n        }\n    };\n\n    render() {\n        let photoShow = this.props.checkClick === true ? (`${css.show}`) : `${css.hide}`;\n        return (\n            <div className={this.props.checkClick ? `${css.item} ${css.itemGreen}` : css.item}\n                 onClick={() => this.onClick(this.props.checkClick)}>\n                <div className={photoShow}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {plusClickAction})(Circle);","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {finish, levelDown, levelPlus, plusClickAction, randomShow} from \"./components/Redux/ReducerGame\";\nimport CircleContainer from \"./components/Circle/Circle\";\nimport css from \"./components/Circle/Circle.module.css\";\n\nclass App extends React.Component {\n    getRandomImageIndex = () => {\n        return Math.floor(Math.random() * 9);\n    };\n\n    state = {\n        start: false,\n        backCount: 3,\n        finish: false,\n        wait: 0,\n    };\n\n    gameStart = () => {\n        this.setState({start: true, wait: 6});\n\n        this.setTimeoutStart(1)\n            .then(() => this.setTimeoutStart(1))\n            .then(() => this.setTimeoutStart(1))\n            .then(() => this.setTimeoutStart(1))\n            .then(() => {\n                this.mySetTimout(1.3, this.state.wait)\n                    .then(() => this.mySetTimout(1.1, this.state.wait))\n                    .then(() => this.mySetTimout(0.9, this.state.wait))\n                    .then(() => {\n                        this.gameEnd();\n                    });\n            });\n    };\n\n    gameEnd = () => {\n        this.setState({backCount: 3, finish: true, wait: 0});\n        this.props.finish();\n        this.props.levelDown();\n        setTimeout(() => {\n            this.setState({finish: false});\n            this.setState({start: false});\n            console.log(`finish`);\n        }, 1000);\n    };\n    gameStop = () => {\n        this.setState({backCount: 3, finish: false, wait: 0});\n        this.props.finish();\n        this.props.levelDown();\n    };\n\n    setTimeoutStart = (secondsStart) => {\n        return new Promise((resolve => {\n                setTimeout(() => {\n                    this.setState({backCount: this.state.backCount - 1});\n                    resolve();\n                }, secondsStart * 1000)\n            })\n        )\n    };\n\n    mySetTimout = (secondsOfIntervale, secondsOfWait) => {\n        return new Promise((resolve) => {\n            this.props.levelPlus();\n            // this.setState({level: this.state.level + 1});\n            let interval = setInterval(() => {\n                this.props.randomShow(this.getRandomImageIndex());\n            }, secondsOfIntervale * 1000);\n\n            setTimeout(() => {\n                clearInterval(interval);\n                resolve();\n            }, secondsOfWait * 1000)\n        })\n    };\n\n    render = () => {\n        let circles = this.props.dogArray.map(item => <CircleContainer key={item.id} id={item.id}\n                                                                       checkClick={item.checkClick}/>);\n        return (\n            <div>\n\n                {this.state.finish\n                    ? <div className=\"App\">Finish</div>\n                    : !this.state.start\n                        ? <div className=\"App\">\n                            <div>\n                                The game has 3 levels of 6 seconds!\n                            </div>\n                            <div>\n                                Hit the target:\n                            </div>\n                            <div>\n                                + 1 point\n                            </div>\n                            <div className={`${css.itemApp} ${css.itemAppGreen}`}>\n                                <div className={css.click}/>\n                            </div>\n                            <div>\n                                Past:\n                            </div>\n                            <div className={`${css.itemApp}`}>\n                                <div className={css.newDog}/>\n                            </div>\n                            <button className={\"button\"} onClick={this.gameStart}>Start</button>\n                        </div>\n                        : <div className=\"App\">\n                            <div className={\"counter\"}>\n                                <div>{this.props.level !== 0 ? `Level: ${this.props.level}` : `Start: ${this.state.backCount}`}</div>\n                                <div>{`Score: ${this.props.counterClick}`}</div>\n                            </div>\n                            <div>\n                                {circles}\n                            </div>\n                            <button className={\"button\"} onClick={this.gameStop}>Stop</button>\n                        </div>\n                }\n                {/*<audio src={dogAudio} controls={true}></audio>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dogArray: state.ReducerGame.dogArray,\n        counterClick: state.ReducerGame.counterClick,\n        level: state.ReducerGame.level\n    }\n};\nconst ConnectedApp = connect(mapStateToProps, {plusClickAction, randomShow, finish, levelPlus, levelDown})(App);\nexport default ConnectedApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport ReducerGame from \"./components/Redux/ReducerGame\";\nimport {Provider} from \"react-redux\";\n    \nconst CombineReducer = combineReducers({\n    ReducerGame: ReducerGame\n});\nconst store = createStore(CombineReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}